// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders correctly 1`] = `
<App
  startup={[Function]}
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <QueryParamProvider
        ReactRouterRoute={[Function]}
      >
        <Route>
          <LocationProvider
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
          >
            <StatusBar
              status={
                Object {
                  "complete": 0,
                  "state": "checking",
                  "total": 2,
                }
              }
            >
              <Checking
                complete={0}
                total={2}
              >
                <Notice
                  title="Checking Theorems"
                >
                  <Toast
                    style={
                      Object {
                        "bottom": "20px",
                        "left": "20px",
                        "position": "absolute",
                      }
                    }
                  >
                    <Fade
                      appear={false}
                      in={true}
                      mountOnEnter={false}
                      timeout={300}
                      unmountOnExit={true}
                    >
                      <Transition
                        addEndListener={[Function]}
                        appear={false}
                        enter={true}
                        exit={true}
                        in={true}
                        mountOnEnter={false}
                        onEnter={[Function]}
                        onEntered={[Function]}
                        onEntering={[Function]}
                        onExit={[Function]}
                        onExited={[Function]}
                        onExiting={[Function]}
                        timeout={300}
                        unmountOnExit={true}
                      >
                        <div
                          aria-atomic="true"
                          aria-live="assertive"
                          className="fade toast show"
                          role="alert"
                          style={
                            Object {
                              "bottom": "20px",
                              "left": "20px",
                              "position": "absolute",
                            }
                          }
                        >
                          <ToastHeader
                            closeButton={false}
                            closeLabel="Close"
                          >
                            <div
                              className="toast-header"
                            >
                              Checking Theorems
                            </div>
                          </ToastHeader>
                          <ToastBody>
                            <div
                              className="toast-body"
                            >
                              <ProgressBar
                                animated={true}
                                isChild={false}
                                label="0 / 2"
                                max={2}
                                min={0}
                                now={0}
                                srOnly={true}
                                striped={false}
                              >
                                <div
                                  className="progress"
                                >
                                  <div
                                    aria-valuemax={2}
                                    aria-valuemin={0}
                                    aria-valuenow={0}
                                    className="progress-bar progress-bar-animated progress-bar-striped"
                                    role="progressbar"
                                    style={
                                      Object {
                                        "width": "0%",
                                      }
                                    }
                                  >
                                    <span
                                      className="sr-only"
                                    >
                                      0 / 2
                                    </span>
                                  </div>
                                </div>
                              </ProgressBar>
                            </div>
                          </ToastBody>
                        </div>
                      </Transition>
                    </Fade>
                  </Toast>
                </Notice>
              </Checking>
            </StatusBar>
            <Memo(Navigation)
              branch="test"
            >
              <Navbar
                bg="dark"
                collapseOnSelect={false}
                expand={true}
                variant="light"
              >
                <nav
                  className="navbar navbar-expand navbar-light bg-dark"
                >
                  <Container
                    fluid={false}
                  >
                    <div
                      className="container"
                    >
                      <NavbarBrand>
                        <span
                          className="navbar-brand"
                        >
                          <Link
                            to="/"
                          >
                            <LinkAnchor
                              href="/"
                              navigate={[Function]}
                            >
                              <a
                                href="/"
                                onClick={[Function]}
                              >
                                Ï€-Base
                              </a>
                            </LinkAnchor>
                          </Link>
                        </span>
                      </NavbarBrand>
                      <NavbarToggle
                        aria-controls="navbar-nav"
                        label="Toggle navigation"
                      >
                        <button
                          aria-controls="navbar-nav"
                          aria-label="Toggle navigation"
                          className="navbar-toggler collapsed"
                          onClick={[Function]}
                          type="button"
                        >
                          <span
                            className="navbar-toggler-icon"
                          />
                        </button>
                      </NavbarToggle>
                      <NavbarCollapse
                        id="navbar-nav"
                      >
                        <ForwardRef
                          appear={false}
                          getDimensionValue={[Function]}
                          id="navbar-nav"
                          in={false}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            addEndListener={[Function]}
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            id="navbar-nav"
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="navbar-collapse collapse"
                              id="navbar-nav"
                            >
                              <Nav
                                fill={false}
                                justify={false}
                              >
                                <ForwardRef
                                  as="div"
                                  className="navbar-nav"
                                  onSelect={[Function]}
                                >
                                  <div
                                    className="navbar-nav"
                                    onKeyDown={[Function]}
                                  >
                                    <Link
                                      className="nav-link"
                                      to="/spaces"
                                    >
                                      <LinkAnchor
                                        className="nav-link"
                                        href="/spaces"
                                        navigate={[Function]}
                                      >
                                        <a
                                          className="nav-link"
                                          href="/spaces"
                                          onClick={[Function]}
                                        >
                                          Spaces
                                        </a>
                                      </LinkAnchor>
                                    </Link>
                                    <Link
                                      className="nav-link"
                                      to="/properties"
                                    >
                                      <LinkAnchor
                                        className="nav-link"
                                        href="/properties"
                                        navigate={[Function]}
                                      >
                                        <a
                                          className="nav-link"
                                          href="/properties"
                                          onClick={[Function]}
                                        >
                                          Properties
                                        </a>
                                      </LinkAnchor>
                                    </Link>
                                    <Link
                                      className="nav-link"
                                      to="/theorems"
                                    >
                                      <LinkAnchor
                                        className="nav-link"
                                        href="/theorems"
                                        navigate={[Function]}
                                      >
                                        <a
                                          className="nav-link"
                                          href="/theorems"
                                          onClick={[Function]}
                                        >
                                          Theorems
                                        </a>
                                      </LinkAnchor>
                                    </Link>
                                  </div>
                                </ForwardRef>
                              </Nav>
                              <Nav
                                className="ml-auto"
                                fill={false}
                                justify={false}
                              >
                                <ForwardRef
                                  as="div"
                                  className="ml-auto navbar-nav"
                                  onSelect={[Function]}
                                >
                                  <div
                                    className="ml-auto navbar-nav"
                                    onKeyDown={[Function]}
                                  >
                                    <DevLink
                                      branch="test"
                                    >
                                      <Link
                                        className="nav-link"
                                        to="/dev"
                                      >
                                        <LinkAnchor
                                          className="nav-link"
                                          href="/dev"
                                          navigate={[Function]}
                                        >
                                          <a
                                            className="nav-link"
                                            href="/dev"
                                            onClick={[Function]}
                                          >
                                            <FaCodeBranch>
                                              <IconBase
                                                attr={
                                                  Object {
                                                    "viewBox": "0 0 384 512",
                                                  }
                                                }
                                              >
                                                <svg
                                                  fill="currentColor"
                                                  height="1em"
                                                  stroke="currentColor"
                                                  strokeWidth="0"
                                                  style={
                                                    Object {
                                                      "color": undefined,
                                                    }
                                                  }
                                                  viewBox="0 0 384 512"
                                                  width="1em"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    d="M384 144c0-44.2-35.8-80-80-80s-80 35.8-80 80c0 36.4 24.3 67.1 57.5 76.8-.6 16.1-4.2 28.5-11 36.9-15.4 19.2-49.3 22.4-85.2 25.7-28.2 2.6-57.4 5.4-81.3 16.9v-144c32.5-10.2 56-40.5 56-76.3 0-44.2-35.8-80-80-80S0 35.8 0 80c0 35.8 23.5 66.1 56 76.3v199.3C23.5 365.9 0 396.2 0 432c0 44.2 35.8 80 80 80s80-35.8 80-80c0-34-21.2-63.1-51.2-74.6 3.1-5.2 7.8-9.8 14.9-13.4 16.2-8.2 40.4-10.4 66.1-12.8 42.2-3.9 90-8.4 118.2-43.4 14-17.4 21.1-39.8 21.6-67.9 31.6-10.8 54.4-40.7 54.4-75.9zM80 64c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16zm0 384c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm224-320c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16z"
                                                    key="0"
                                                  />
                                                </svg>
                                              </IconBase>
                                            </FaCodeBranch>
                                             
                                            test
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                    </DevLink>
                                    <a
                                      className="nav-link"
                                      href="https://github.com/pi-base/data/blob/master/CONTRIBUTING.md"
                                    >
                                      Contribute
                                    </a>
                                  </div>
                                </ForwardRef>
                              </Nav>
                            </div>
                          </Transition>
                        </ForwardRef>
                      </NavbarCollapse>
                    </div>
                  </Container>
                </nav>
              </Navbar>
            </Memo(Navigation)>
            <Memo(Main)
              dispatch={[Function]}
              handler={
                Object {
                  "error": [Function],
                }
              }
            >
              <Container
                fluid={false}
              >
                <div
                  className="container"
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        }
                      }
                      exact={true}
                      location={
                        Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        }
                      }
                      path="/"
                    >
                      <Home
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          }
                        }
                      >
                        <Jumbotron
                          className="wide home-jumbotron"
                          fluid={false}
                        >
                          <div
                            className="wide home-jumbotron jumbotron"
                          >
                            <div
                              className="container"
                            >
                              <h1>
                                Ï€-Base
                              </h1>
                              <p>
                                a community database of topological counterexamples
                              </p>
                              <p>
                                âžœ Search by property, such as 
                                <Link
                                  to="/spaces?q=compact%20%2B%20connected%20%2B%20t_2%20%2B%20~metrizable"
                                >
                                  <LinkAnchor
                                    href="/spaces?q=compact%20%2B%20connected%20%2B%20t_2%20%2B%20~metrizable"
                                    navigate={[Function]}
                                  >
                                    <a
                                      href="/spaces?q=compact%20%2B%20connected%20%2B%20t_2%20%2B%20~metrizable"
                                      onClick={[Function]}
                                    >
                                      non-metric continua
                                    </a>
                                  </LinkAnchor>
                                </Link>
                              </p>
                              <p>
                                âžœ Find spaces by name, such as 
                                <Link
                                  to="/spaces?text=compactification"
                                >
                                  <LinkAnchor
                                    href="/spaces?text=compactification"
                                    navigate={[Function]}
                                  >
                                    <a
                                      href="/spaces?text=compactification"
                                      onClick={[Function]}
                                    >
                                      compactifications
                                    </a>
                                  </LinkAnchor>
                                </Link>
                              </p>
                              <p>
                                âžœ View counterexamples to the converse of a theorem, such as 
                                <Link
                                  to="/theorems/T000112"
                                >
                                  <LinkAnchor
                                    href="/theorems/T000112"
                                    navigate={[Function]}
                                  >
                                    <a
                                      href="/theorems/T000112"
                                      onClick={[Function]}
                                    >
                                      Tâ‚… â‡’ Tâ‚„
                                    </a>
                                  </LinkAnchor>
                                </Link>
                              </p>
                            </div>
                          </div>
                        </Jumbotron>
                        <h2>
                          Contributing
                        </h2>
                        <p>
                          The Ï€-Base relies on volunteers like yourself to submit new spaces, properties, and theorems. More information may be found on our 
                          <a
                            href="https://github.com/pi-base/data/blob/master/CONTRIBUTING.md"
                          >
                            Contributing
                          </a>
                           page.
                        </p>
                        <p>
                          Ï€-Baseâ€™s 
                          <a
                            href="https://github.com/pi-base/data"
                          >
                            data
                          </a>
                           and 
                          <a
                            href="https://github.com/pi-base/viewer"
                          >
                            source code
                          </a>
                           are available on GitHub. Code contributions are welcomed as well!
                        </p>
                        <h2>
                          About Us
                        </h2>
                        <p>
                          The Ï€-Base was founded in 2014 by 
                          <a
                            href="https://github.com/jamesdabbs"
                          >
                            James Dabbs
                          </a>
                          , who continues to maintain the project and serve as its main developer.
                        </p>
                        <p>
                          <a
                            href="https://github.com/stevenclontz"
                          >
                            Steven Clontz
                          </a>
                           joined the project in 2017, serving as its lead mathematical editor.
                        </p>
                        <h2>
                           Acknowledgements
                        </h2>
                        <p>
                           Many people have contributed to this project, and all contributions are appreciated, but a few individuals deserve special recognition:
                        </p>
                        <ul>
                          <li>
                            <a
                              href="http://www.montevallo.edu/staff-bio/scott-varagona/"
                            >
                              Scott Varagona
                            </a>
                             for his heroic work entering data into the database
                          </li>
                          <li>
                            Our graduate advisor, 
                            <a
                              href="http://www.auburn.edu/~gruengf/"
                            >
                              Gary Gruenhage
                            </a>
                             for all his support and guidance
                          </li>
                          <li>
                            <a
                              href="http://austinmohr.com/home/"
                            >
                              Austin Mohr
                            </a>
                             for his work using the Ï€-Base as a pedagogical tool, and all his invaluable feedback
                          </li>
                          <li>
                            The 
                            <a
                              href="https://www.southalabama.edu/"
                            >
                              University of South Alabama
                            </a>
                             
                             Faculty Development Program for providing funding to host the Ï€-Base server.
                          </li>
                          <li>
                            Steen and Seebach for writing 
                            <a
                              href="http://www.amazon.com/Counterexamples-Topology-Dover-Books-Mathematics/dp/048668735X"
                            >
                              Counterexamples in Topology
                            </a>
                             in the first place and inspiring this project.
                          </li>
                        </ul>
                      </Home>
                    </Route>
                  </Switch>
                </div>
              </Container>
            </Memo(Main)>
          </LocationProvider>
        </Route>
      </QueryParamProvider>
    </Router>
  </BrowserRouter>
</App>
`;
